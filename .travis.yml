language: julia
os:
    - osx
    - linux
julia:
    - 1.0
    - 1.1
    - nightly

env:
  - USE_MASTER=true
  - USE_MASTER=""

notifications:
  email: false
matrix:
  exclude:
    - julia: 1.0
      env: USE_MASTER=true
    - julia: 1.1
      env: USE_MASTER=true
    - julia: nightly
      env: USE_MASTER=""
  allow_failures:
  - julia: nightly

before_script:
  - if [ ! -z "$USE_MASTER" ]; then curl $SCRIPT_URL -o install_master.jl; julia install_master.jl;  fi

# use default julia script for test
# script:
#    - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
#    - julia --check-bounds=yes --color=yes -e 'import Pkg; Pkg.clone(pwd()); Pkg.build("ImageCore"); Pkg.test("ImageCore"; coverage=true)';

# control of actual deployment is in the Documenter make script
jobs:
  include:
    - stage: deploy
      julia: 1.0
      os: linux
      env: USE_MASTER=""
      script:
        # - julia -e 'import Pkg; Pkg.clone(pwd()); Pkg.build("ImageCore")'
        - julia -e 'import Pkg; Pkg.add("Documenter")'
        - julia -e 'import ImageCore; ENV["DOCUMENTER_DEBUG"] = "true"; include(joinpath("docs","make.jl"))'

after_success:
    - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(process_folder())'
